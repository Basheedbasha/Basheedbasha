Bankers algorithm:
program:
#include<stdio.h> #include<conio.h> void main()
{
char job[10][10];
int time[10],avail,tem[10],temp[10]; int safe[10]; int ind=1,i,j,q,n,t;
//clrscr();
printf("Enter no of jobs: "); scanf("%d",&n); for(i=0;i<n;i++)
{
printf("Enter name and time: "); scanf("%s%d",&job[i],&time[i]);
}
printf("Enter the available resources:"); scanf("%d",&avail);
for(i=0;i<n;i++)
{
temp[i]=time[i]; tem[i]=i;
}
for(i=0;i<n;i++) for(j=i+1;j<n;j++)
{
if(temp[i]>temp[j])
{t=temp[i]; temp[i]=temp[j];
temp[j]=t; t=tem[i];
tem[i]=tem[j]; tem[j]=t;
}
}
for(i=0;i<n;i++)
{
q=tem[i]; if(time[q]<=avail)
{
safe[ind]=tem[i]; avail=avail-tem[q]; printf("%s",job[safe[ind]]); ind++;
}
else
{
printf("No safe sequence\n");
}
}
printf("Safe sequence is:"); for(i=1;i<ind; i++)
printf("%s %d\n",job[safe[i]],time[safe[i]]); getch();
}


Fifo:

#include<stdio.h>

int main()

{

int queue[20],n,head,i,j,k,seek=0,max,diff;

float avg;

printf("Enter the max range of disk\n");

scanf("%d",&max);

printf("Enter the size of queue request\n");

scanf("%d",&n);

printf("Enter the queue of disk positions to be read\n");

for(i=1;i<=n;i++)

scanf("%d",&queue[i]);

printf("Enter the initial head position\n");

scanf("%d",&head);

queue[0]=head;

for(j=0;j<=n-1;j++)

{

diff=abs(queue[j+1]-queue[j]);

seek+=diff;

printf("Disk head moves from %d to %d with seek %d\n",queue[j],queue[j+1],diff);

}

printf("Total seek time is %d\n",seek);

avg=seek/(float)n;

printf("Average seek time is %f\n",avg);

return 0;

}
